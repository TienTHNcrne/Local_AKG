import React, { useState } from "react";
import styles from "./Belief.module.scss";
import Accordion from "@mui/material/Accordion";
import AccordionSummary from "@mui/material/AccordionSummary";
import Typography from "@mui/material/Typography";
import AccordionDetails from "@mui/material/AccordionDetails";
import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
import { Dialog, DialogContent, IconButton } from "@mui/material";
import { Close, NavigateBefore, NavigateNext } from "@mui/icons-material";

export default function Belief() {
    const [lightboxOpen, setLightboxOpen] = useState(false);
    const [currentImageIndex, setCurrentImageIndex] = useState(0);
    const [currentGallery, setCurrentGallery] = useState([]);

    const openLightbox = (images, index) => {
        setCurrentGallery(images);
        setCurrentImageIndex(index);
        setLightboxOpen(true);
    };

    const closeLightbox = () => {
        setLightboxOpen(false);
    };

    const goToPrevious = () => {
        setCurrentImageIndex((prevIndex) =>
            prevIndex === 0 ? currentGallery.length - 1 : prevIndex - 1
        );
    };

    const goToNext = () => {
        setCurrentImageIndex((prevIndex) =>
            prevIndex === currentGallery.length - 1 ? 0 : prevIndex + 1
        );
    };

    const items = [
        {
            title: "T√≠n ng∆∞·ª°ng th·ªù M·∫´u v√† Th√°nh M·∫´u v√πng Th·∫•t S∆°n",
            text: "Th·ªù Di√™u Tr√¨ Kim M·∫´u, C·ª≠u Thi√™n Huy·ªÅn N·ªØ, Ng≈© N∆∞∆°ng, B√† Thi√™n H·∫≠u, C·ª≠u N∆∞∆°ng, C√¥ Ti√™n‚Ä¶ g·∫Øn v·ªõi c√°c truy·ªÅn thuy·∫øt b·∫£o h·ªô m√πa m√†ng, s·ª©c kh·ªèe, b√¨nh an. T·∫≠p trung t·∫°i c√°c n√∫i nh∆∞ N√∫i K√©c, N√∫i C·∫•m.",
            imgs: ["/imgs/belief/1.png", "/imgs/belief/2.png"],
        },
        {
            title: "N√∫i C·∫•m v√† c√°c am, ƒëi·ªán th·ªù d√¢n gian",
            text: "Nhi·ªÅu ƒëi·ªÉm th·ªù t·ª± nh∆∞ v·ªì B·ªì Hong (th·ªù Ng·ªçc Ho√†ng), v·ªì B√†, v·ªì Thi√™n Tu·∫ø.",
            imgs: ["/imgs/belief/3.png", "/imgs/belief/4.png"],
        },
        {
            title: "Th·ªù anh h√πng d√¢n t·ªôc",
            text: "LƒÉng Tho·∫°i Ng·ªçc H·∫ßu (th·ªù Tho·∫°i Ng·ªçc H·∫ßu v√† phu nh√¢n), ƒê√¨nh Ch√¢u Ph√∫ (th·ªù Nguy·ªÖn H·ªØu C·∫£nh), ƒê·ªÅn Tr√† S∆∞ (th·ªù c√°c anh h√πng ch·ªëng gi·∫∑c ngo·∫°i x√¢m); - Nguy·ªÖn Trung Tr·ª±c (R·∫°ch Gi√°) ‚Äì th·ªù anh h√πng d√¢n t·ªôc Nguy·ªÖn Trung Tr·ª±c; - ƒê·ªÅn th·ªù Qu·∫£n c∆° Tr·∫ßn VƒÉn Th√†nh;",
            imgs: [
                "/imgs/belief/5.png",
                "/imgs/belief/6.png",
                "/imgs/belief/7.png",
                "/imgs/belief/8.png",
                "/imgs/belief/9.png",
                "/imgs/belief/10.png",
                "/imgs/belief/11.png",
                "/imgs/belief/12.png",
            ],
        },
        {
            title: "ƒê√¨nh th·∫ßn",
            text: "- ƒê√¨nh B√¨nh ƒê·ª©c, ƒê√¨nh M·ªπ Ph∆∞·ªõc, ƒê√¨nh Vƒ©nh Ph∆∞·ªõc‚Ä¶ th·ªù Th√†nh ho√†ng, Ti·ªÅn hi·ªÅn, H·∫≠u hi·ªÅn; t·ªï ch·ª©c L·ªÖ K·ª≥ y√™n c·∫ßu an. - ƒê√¨nh th·∫ßn An H√≤a, ƒê√¨nh th·∫ßn T·∫Øc C·∫≠u ‚Äì th·ªù Th√†nh ho√†ng, Ti·ªÅn hi·ªÅn.",
            imgs: ["/imgs/belief/13.png", "/imgs/belief/14.png"],
        },
        {
            title: "Mi·∫øu th·ªù",
            text: " - Mi·∫øu B√† Ch√∫a X·ª© Ch√¢u Ph√∫, Mi·∫øu B√† C√¥, Mi·∫øu B√† Ng≈© H√†nh‚Ä¶ g·∫Øn v·ªõi t√≠n ng∆∞·ª°ng th·ªù n·ªØ th·∫ßn v√† c·∫ßu an. - Mi·∫øu B√† Th·ªßy Long Th√°nh M·∫´u, Mi·∫øu B√† Ch√∫a X·ª© Ph√∫ Qu·ªëc, Mi·∫øu Quan Th√°nh ƒê·∫ø Qu√¢n H√† Ti√™n ‚Äì th·ªù th·∫ßn bi·ªÉn, n·ªØ th·∫ßn, quan v√µ theo t√≠n ng∆∞·ª°ng Hoa ‚Äì Vi·ªát. - Mi·∫øu B√† Ch√∫a X·ª© N√∫i Sam: L·ªÖ V√≠a B√† (23‚Äì27/4 √¢m l·ªãch) l√† l·ªÖ h·ªôi l·ªõn nh·∫•t An Giang, thu h√∫t h√†ng tri·ªáu du kh√°ch.",
            imgs: [
                "/imgs/belief/15.png",
                "/imgs/belief/16.png",
                "/imgs/belief/17.png",
                "/imgs/belief/18.png",
            ],
        },
        {
            title: "L·ªÖ h·ªôi Nghinh √îng, Dinh C·∫≠u",
            text: "Th·ªù C√° √îng, c·∫ßu b√¨nh an cho ng∆∞ d√¢n.15‚Äì16 th√°ng Gi√™ng √¢m l·ªãch; c·∫ßu thu·∫≠n bu·ªìm xu√¥i gi√≥, t·ªï ch·ª©c m√∫a l√¢n, r∆∞·ªõc ƒë√®n, ƒëua thuy·ªÅn.",
            imgs: ["/imgs/belief/19.png", "/imgs/belief/20.png"],
        },
    ];

    return (
        <div className={styles.container}>
            <div className={styles.header}>
                <h2 className={styles.heading}>T√≠n Ng∆∞·ª°ng</h2>
                <p className={styles.intro}>
                    Kh√°m ph√° c√°c t√≠n ng∆∞·ª°ng, t√¢m linh ƒë·∫∑c s·∫Øc t·∫°i v√πng ƒë·∫•t An
                    Giang
                </p>
            </div>

            <div className={styles.accordionContainer}>
                {items.map((item, idx) => (
                    <Accordion
                        key={idx}
                        className={styles.accordion}
                        defaultExpanded={idx === 0}
                    >
                        <AccordionSummary
                            expandIcon={
                                <ExpandMoreIcon className={styles.expandIcon} />
                            }
                            aria-controls={`panel${idx + 1}-content`}
                            id={`panel${idx + 1}-header`}
                            className={styles.summary}
                        >
                            <Typography className={styles.title}>
                                <h3>{item.title}</h3>{" "}
                            </Typography>
                        </AccordionSummary>

                        <AccordionDetails className={styles.content}>
                            <Typography>
                                <p className={styles.text}>{item.text}</p>
                                <div className={styles.imageGallery}>
                                    {item.imgs.map((src, i) => (
                                        <div
                                            key={i}
                                            className={styles.imageContainer}
                                            onClick={() =>
                                                openLightbox(item.imgs, i)
                                            }
                                        >
                                            <img
                                                src={src}
                                                alt={`H√¨nh ·∫£nh t√≠n ng∆∞·ª°ng ${
                                                    idx + 1
                                                }-${i + 1}`}
                                                className={styles.image}
                                            />
                                            <div
                                                className={styles.imageOverlay}
                                            >
                                                <span
                                                    className={styles.zoomIcon}
                                                >
                                                    üîç
                                                </span>
                                            </div>
                                        </div>
                                    ))}
                                </div>
                            </Typography>
                        </AccordionDetails>
                    </Accordion>
                ))}
            </div>

            {/* Lightbox Modal */}
            <Dialog
                open={lightboxOpen}
                onClose={closeLightbox}
                maxWidth="lg"
                fullWidth
                className={styles.lightboxModal}
            >
                <DialogContent className={styles.lightboxContent}>
                    <IconButton
                        className={styles.closeButton}
                        onClick={closeLightbox}
                    >
                        <Close />
                    </IconButton>

                    <div className={styles.lightboxImageContainer}>
                        <IconButton
                            className={styles.navButton}
                            onClick={goToPrevious}
                            style={{ left: "10px" }}
                        >
                            <NavigateBefore />
                        </IconButton>

                        <img
                            src={currentGallery[currentImageIndex]}
                            alt=""
                            className={styles.lightboxImage}
                        />

                        <IconButton
                            className={styles.navButton}
                            onClick={goToNext}
                            style={{ right: "10px" }}
                        >
                            <NavigateNext />
                        </IconButton>
                    </div>

                    <div className={styles.imageCounter}>
                        {currentImageIndex + 1} / {currentGallery.length}
                    </div>
                </DialogContent>
            </Dialog>
        </div>
    );
}
